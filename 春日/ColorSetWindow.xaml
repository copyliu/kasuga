<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="春日.ColorSetWindow" Title="色セットの設定" Width="300" Height="360" ResizeMode="NoResize" ShowInTaskbar="False" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:春日">
  <Window.Resources>
    <SolidColorBrush x:Key="ErrorBrush" Color="Red" />
  </Window.Resources>
  <DockPanel Margin="3,3,3,3">
    <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
      <Button Content="OK" Width="75" Margin="3,3,3,3" Command="{Binding Path=OkCommand}" />
      <Button Content="キャンセル" Width="75" Margin="3,3,3,3" Command="{Binding Path=CancelCommand}" />
    </StackPanel>
    <StackPanel DockPanel.Dock="Top" VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Left" Margin="3,3,3,3">
      <Label Content="名前" />
      <TextBox Width="220" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        <TextBox.Style>
          <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Path=HasNameError, Mode=OneWay}" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBox.Style>
      </TextBox>
    </StackPanel>
    <TabControl DockPanel.Dock="Top" VerticalAlignment="Top" Margin="3,3,3,3">
      <TabItem Header="内側・ワイプ前">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <ComboBox Width="100" Margin="3,3,3,3" VerticalAlignment="Center" ItemsSource="{Binding Path=TypeNames, Mode=OneTime}" SelectedItem="{Binding Path=InnerBefore.TypeName, Mode=TwoWay}" />
            <StackPanel Orientation="Horizontal" Margin="3,3,3,3">
              <Label Content="色数" />
              <TextBox Width="35" TextAlignment="Right" Text="{Binding Path=InnerBefore.ColorNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=InnerBefore.IsColorNumEnabled, Mode=OneWay}">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=InnerBefore.HasColorNumError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
          </StackPanel>
          <local:DataGridEx Height="150" Margin="3,3,3,3" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding Path=InnerBefore.Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HiddenColumns="{Binding Path=InnerBefore.HiddenColumns, Mode=OneWay}">
            <local:DataGridEx.Columns>
              <DataGridTemplateColumn Header="色の設定">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Height="25" Background="{Binding Path=ColorAlpha.SolidBrush}" Command="{Binding Path=ChangeColorAlphaCommand}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="幅の比" Binding="{Binding Path=WidthRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=HasWidthRatioError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
            </local:DataGridEx.Columns>
          </local:DataGridEx>
        </StackPanel>
      </TabItem>
      <TabItem Header="内側・ワイプ後">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <ComboBox Width="100" Margin="3,3,3,3" VerticalAlignment="Center" ItemsSource="{Binding Path=TypeNames, Mode=OneTime}" SelectedItem="{Binding Path=InnerAfter.TypeName, Mode=TwoWay}" />
            <StackPanel Orientation="Horizontal" Margin="3,3,3,3">
              <Label Content="色数" />
              <TextBox Width="35" TextAlignment="Right" Text="{Binding Path=InnerAfter.ColorNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=InnerAfter.IsColorNumEnabled, Mode=OneWay}">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=InnerAfter.HasColorNumError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
          </StackPanel>
          <local:DataGridEx Height="150" Margin="3,3,3,3" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding Path=InnerAfter.Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HiddenColumns="{Binding Path=InnerAfter.HiddenColumns, Mode=OneWay}">
            <local:DataGridEx.Columns>
              <DataGridTemplateColumn Header="色の設定">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Height="25" Background="{Binding Path=ColorAlpha.SolidBrush}" Command="{Binding Path=ChangeColorAlphaCommand}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="幅の比" Binding="{Binding Path=WidthRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=HasWidthRatioError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
            </local:DataGridEx.Columns>
          </local:DataGridEx>
        </StackPanel>
      </TabItem>
      <TabItem Header="縁取り・ワイプ前">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <ComboBox Width="100" Margin="3,3,3,3" VerticalAlignment="Center" ItemsSource="{Binding Path=TypeNames, Mode=OneTime}" SelectedItem="{Binding Path=BorderBefore.TypeName, Mode=TwoWay}" />
            <StackPanel Orientation="Horizontal" Margin="3,3,3,3">
              <Label Content="色数" />
              <TextBox Width="35" TextAlignment="Right" Text="{Binding Path=BorderBefore.ColorNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=BorderBefore.IsColorNumEnabled, Mode=OneWay}">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=BorderBefore.HasColorNumError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
          </StackPanel>
          <local:DataGridEx Height="150" Margin="3,3,3,3" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding Path=BorderBefore.Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HiddenColumns="{Binding Path=BorderBefore.HiddenColumns, Mode=OneWay}">
            <local:DataGridEx.Columns>
              <DataGridTemplateColumn Header="色の設定">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Height="25" Background="{Binding Path=ColorAlpha.SolidBrush}" Command="{Binding Path=ChangeColorAlphaCommand}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="幅の比" Binding="{Binding Path=WidthRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=HasWidthRatioError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
            </local:DataGridEx.Columns>
          </local:DataGridEx>
        </StackPanel>
      </TabItem>
      <TabItem Header="縁取り・ワイプ後">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <ComboBox Width="100" Margin="3,3,3,3" VerticalAlignment="Center" ItemsSource="{Binding Path=TypeNames, Mode=OneTime}" SelectedItem="{Binding Path=BorderAfter.TypeName, Mode=TwoWay}" />
            <StackPanel Orientation="Horizontal" Margin="3,3,3,3">
              <Label Content="色数" />
              <TextBox Width="35" TextAlignment="Right" Text="{Binding Path=BorderAfter.ColorNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=BorderAfter.IsColorNumEnabled, Mode=OneWay}">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=BorderAfter.HasColorNumError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
          </StackPanel>
          <local:DataGridEx Height="150" Margin="3,3,3,3" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding Path=BorderAfter.Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HiddenColumns="{Binding Path=BorderAfter.HiddenColumns, Mode=OneWay}">
            <local:DataGridEx.Columns>
              <DataGridTemplateColumn Header="色の設定">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Height="25" Background="{Binding Path=ColorAlpha.SolidBrush}" Command="{Binding Path=ChangeColorAlphaCommand}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="幅の比" Binding="{Binding Path=WidthRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=HasWidthRatioError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
            </local:DataGridEx.Columns>
          </local:DataGridEx>
        </StackPanel>
      </TabItem>
      <TabItem Header="影">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
            <ComboBox Width="100" Margin="3,3,3,3" VerticalAlignment="Center" ItemsSource="{Binding Path=TypeNames, Mode=OneTime}" SelectedItem="{Binding Path=Shadow.TypeName, Mode=TwoWay}" />
            <StackPanel Orientation="Horizontal" Margin="3,3,3,3">
              <Label Content="色数" />
              <TextBox Width="35" TextAlignment="Right" Text="{Binding Path=Shadow.ColorNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=Shadow.IsColorNumEnabled, Mode=OneWay}">
                <TextBox.Style>
                  <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=Shadow.HasColorNumError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBox.Style>
              </TextBox>
            </StackPanel>
          </StackPanel>
          <local:DataGridEx Height="150" Margin="3,3,3,3" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding Path=Shadow.Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HiddenColumns="{Binding Path=HiddenColumns, Mode=OneWay}">
            <local:DataGridEx.Columns>
              <DataGridTemplateColumn Header="色の設定">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Height="25" Background="{Binding Path=ColorAlpha.SolidBrush}" Command="{Binding Path=ChangeColorAlphaCommand}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="幅の比" Binding="{Binding Path=WidthRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Path=HasWidthRatioError, Mode=OneWay}" Value="True">
                        <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
            </local:DataGridEx.Columns>
          </local:DataGridEx>
        </StackPanel>
      </TabItem>
    </TabControl>
  </DockPanel>
</Window>